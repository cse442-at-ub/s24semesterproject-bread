{"ast":null,"code":"// SignUpAPI.jsx\nconst apiUrl = 'https://www-student.cse.buffalo.edu/CSE442-542/2024-Spring/cse-442ac/register/register.php';\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\nconst signUp = async (email, username, password, confirmPassword) => {\n  try {\n    const response = await fetch(proxyUrl + apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        username: username,\n        password: password,\n        confirmPassword: confirmPassword,\n        action: 'register'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const responseData = await response.text();\n    console.log('Response data:', responseData);\n    return responseData;\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('Failed to sign up. Please try again.');\n  }\n};\nexport default signUp;","map":{"version":3,"names":["apiUrl","proxyUrl","signUp","email","username","password","confirmPassword","response","fetch","method","headers","body","JSON","stringify","action","ok","Error","responseData","text","console","log","error"],"sources":["/Users/ali/Documents/GitHub/s24semesterproject-bread/src/SignUpLink.jsx"],"sourcesContent":["// SignUpAPI.jsx\nconst apiUrl = 'https://www-student.cse.buffalo.edu/CSE442-542/2024-Spring/cse-442ac/register/register.php';\nconst proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n\nconst signUp = async (email, username, password, confirmPassword) => {\n  try {\n    const response = await fetch(proxyUrl + apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        username: username,\n        password: password,\n        confirmPassword: confirmPassword,\n        action: 'register',\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const responseData = await response.text();\n    console.log('Response data:', responseData);\n\n    return responseData;\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('Failed to sign up. Please try again.');\n  }\n};\n\nexport default signUp;\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,4FAA4F;AAC3G,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,eAAe,KAAK;EACnE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,QAAQ,GAAGD,MAAM,EAAE;MAC9CS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBV,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA,QAAQ;QAClBC,eAAe,EAAEA,eAAe;QAChCQ,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,YAAY,CAAC;IAE3C,OAAOA,YAAY;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAM,IAAIL,KAAK,CAAC,sCAAsC,CAAC;EACzD;AACF,CAAC;AAED,eAAed,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}