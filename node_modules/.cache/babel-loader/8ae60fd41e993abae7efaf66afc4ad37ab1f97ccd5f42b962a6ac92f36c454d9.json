{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/professorPage/professorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ProfessorCard.css';\nimport NavBar from '../navBar/NavBar';\nimport defaultPic from \"../../images/defaultPic.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfessorCard = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [professorInfo, setProfessorInfo] = useState({\n    name: '',\n    department: '',\n    profilePicture: '',\n    rating: 0,\n    reviews: []\n  });\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    // Simulated fetch request based on professor name\n    fetchProfessorInfo(name);\n  }, [name]);\n  useEffect(() => {\n    console.log(\"Professor Name:\", professorInfo.name);\n    console.log(\"Professor Department:\", professorInfo.department);\n    setReviews(professorInfo.reviews); // Update reviews state with professorInfo.reviews\n  }, [professorInfo]);\n  const fetchProfessorInfo = professorName => {\n    // Simulated fetch request\n    setTimeout(() => {\n      // Replace with actual fetch request to retrieve professor info based on name\n      setProfessorInfo({\n        name: professorName,\n        department: 'Computer Science',\n        // Example department\n        profilePicture: '',\n        // Example profile picture\n        rating: 4.5,\n        // Example rating\n        reviews: [\n        // Example reviews\n        {\n          author: \"John Doe\",\n          content: \"Great professor!\",\n          rating: 5,\n          term: \"Fall 2023\",\n          course: \"CS101\"\n        }, {\n          author: \"Jane Smith\",\n          content: \"Very knowledgeable\",\n          rating: 4,\n          term: \"Spring 2022\",\n          course: \"CS202\"\n        }]\n      });\n    }, 1000); // Simulate loading delay\n  };\n  const sortReviews = sortBy => {\n    const sortedReviews = [...reviews].sort((a, b) => {\n      if (sortBy === \"rating\") {\n        return b.rating - a.rating; // For descending order\n      } else if (sortBy === \"author\") {\n        return a.author.localeCompare(b.author); // For alphabetical order\n      }\n      return 0;\n    });\n    setReviews(sortedReviews);\n  };\n  const Review = ({\n    author,\n    content,\n    rating,\n    term,\n    course\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [term, \" - \", course]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Rating: \", rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n  const handleWriteReview = () => {\n    alert(\"This function will be implemented later\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professor-main\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professor-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: professorInfo.profilePicture || defaultPic,\n        alt: \"Professor\",\n        className: \"professor-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: professorInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: professorInfo.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professor-rating\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [professorInfo.rating, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sort-button\",\n        onClick: () => sortReviews(\"rating\"),\n        children: \"Sort by Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sort-button\",\n        onClick: () => sortReviews(\"author\"),\n        children: \"Sort by Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews\",\n      children: reviews && reviews.map((review, index) => /*#__PURE__*/_jsxDEV(Review, {\n        author: review.author,\n        content: review.content,\n        rating: review.rating,\n        term: review.term,\n        course: review.course\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write-review-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"write-review-button\",\n        onClick: handleWriteReview,\n        children: \"Write a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfessorCard, \"Qvtr+bI9lAQdbCXzCdq5Yd5a3RQ=\", false, function () {\n  return [useParams];\n});\n_c = ProfessorCard;\nexport default ProfessorCard;\nvar _c;\n$RefreshReg$(_c, \"ProfessorCard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","NavBar","defaultPic","jsxDEV","_jsxDEV","ProfessorCard","_s","name","professorInfo","setProfessorInfo","department","profilePicture","rating","reviews","setReviews","fetchProfessorInfo","console","log","professorName","setTimeout","author","content","term","course","sortReviews","sortBy","sortedReviews","sort","a","b","localeCompare","Review","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleWriteReview","alert","src","alt","onClick","map","review","index","_c","$RefreshReg$"],"sources":["/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/professorPage/professorPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ProfessorCard.css';\nimport NavBar from '../navBar/NavBar';\nimport defaultPic from \"../../images/defaultPic.png\";\n\nconst ProfessorCard = () => {\n    const { name } = useParams();\n    const [professorInfo, setProfessorInfo] = useState({\n        name: '',\n        department: '',\n        profilePicture: '',\n        rating: 0,\n        reviews: []\n    });\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        // Simulated fetch request based on professor name\n        fetchProfessorInfo(name);\n    }, [name]);\n\n    useEffect(() => {\n        console.log(\"Professor Name:\", professorInfo.name);\n        console.log(\"Professor Department:\", professorInfo.department);\n        setReviews(professorInfo.reviews); // Update reviews state with professorInfo.reviews\n    }, [professorInfo]);\n\n    const fetchProfessorInfo = (professorName) => {\n        // Simulated fetch request\n        setTimeout(() => {\n            // Replace with actual fetch request to retrieve professor info based on name\n            setProfessorInfo({\n                name: professorName,\n                department: 'Computer Science', // Example department\n                profilePicture: '', // Example profile picture\n                rating: 4.5, // Example rating\n                reviews: [ // Example reviews\n                    { author: \"John Doe\", content: \"Great professor!\", rating: 5, term: \"Fall 2023\", course: \"CS101\" },\n                    { author: \"Jane Smith\", content: \"Very knowledgeable\", rating: 4, term: \"Spring 2022\", course: \"CS202\" }\n                ]\n            });\n        }, 1000); // Simulate loading delay\n    };\n\n    const sortReviews = (sortBy) => {\n        const sortedReviews = [...reviews].sort((a, b) => {\n            if (sortBy === \"rating\") {\n                return b.rating - a.rating; // For descending order\n            } else if (sortBy === \"author\") {\n                return a.author.localeCompare(b.author); // For alphabetical order\n            }\n            return 0;\n        });\n\n        setReviews(sortedReviews);\n    };\n\n    const Review = ({ author, content, rating, term, course }) => {\n        return (\n            <div className=\"review\">\n                <div className=\"review-header\">\n                    <h4>{author}</h4>\n                    <span>{term} - {course}</span>\n                    <span>Rating: {rating}</span>\n                </div>\n                <p>{content}</p>\n            </div>\n        );\n    };\n\n    const handleWriteReview = () => {\n        alert(\"This function will be implemented later\");\n    };\n\n    return (\n        <div className='professor-main'>\n            <NavBar/>\n            <div className=\"professor-card\">\n                <img src={professorInfo.profilePicture || defaultPic} alt=\"Professor\" className=\"professor-img\" />\n                <div className=\"professor-info\">\n                    <h2>{professorInfo.name}</h2>\n                    <p>{professorInfo.department}</p>\n                </div>\n                <div className=\"professor-rating\">\n                    <span>{professorInfo.rating}/5</span>\n                </div>\n            </div>\n            <div className='sort-button-container'>\n                <button className='sort-button' onClick={() => sortReviews(\"rating\")}>Sort by Rating</button>\n                <button className='sort-button' onClick={() => sortReviews(\"author\")}>Sort by Author</button> \n            </div>\n\n            {/* Render the sorted reviews */}\n            <div className=\"reviews\">\n                {reviews && reviews.map((review, index) => (\n                    <Review \n                        key={index} \n                        author={review.author} \n                        content={review.content} \n                        rating={review.rating}\n                        term={review.term}\n                        course={review.course}\n                    />\n                ))}\n            </div>\n\n            {/* Write a review button */}\n            <div className=\"write-review-container\">\n                <button className=\"write-review-button\" onClick={handleWriteReview}>Write a Review</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProfessorCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}