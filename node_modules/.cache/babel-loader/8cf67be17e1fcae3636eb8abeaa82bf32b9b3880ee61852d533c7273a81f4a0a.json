{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/searchresult/searchresult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProfessorProfiles from '../../components/Searchcomponents/ProfessorSearchPage';\nimport NavBar from '../navBar/NavBar';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [professors, setProfessors] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    // Check if search results are available in location state\n    if (location.state && location.state.professors) {\n      // If available, set the professors state with the search results\n      setProfessors(location.state.professors.map(({\n        professors,\n        ...rest\n      }) => ({\n        name: professors,\n        ...rest\n      })));\n    } else {\n      // If not available, fetch search results from the backend\n      fetch('https://cors-anywhere.herokuapp.com/https://www-student.cse.buffalo.edu/CSE442-542/2024-Spring/cse-442ac/backend/searchFilter/?filter=professors').then(response => response.json()).then(data => {\n        console.log(\"Received data from backend:\", data);\n        setProfessors(data.map(({\n          professors,\n          ...rest\n        }) => ({\n          name: professors,\n          ...rest\n        })));\n      }).catch(error => console.error('Error fetching search results:', error));\n    }\n  }, [location.state]);\n  console.log(\"Search results:\", professors); // Add this line to print search results\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfessorProfiles, {\n      professors: professors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"PSMUXDhuiFUxbKGTGAtLS2bcxPY=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","ProfessorProfiles","NavBar","useLocation","jsxDEV","_jsxDEV","Search","_s","professors","setProfessors","location","state","map","rest","name","fetch","then","response","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/searchresult/searchresult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProfessorProfiles from '../../components/Searchcomponents/ProfessorSearchPage';\nimport NavBar from '../navBar/NavBar';\nimport { useLocation } from 'react-router-dom';\n\nfunction Search() {\n  const [professors, setProfessors] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    // Check if search results are available in location state\n    if (location.state && location.state.professors) {\n      // If available, set the professors state with the search results\n      setProfessors(location.state.professors.map(({ professors, ...rest }) => ({ name: professors, ...rest })));\n    } else {\n      // If not available, fetch search results from the backend\n      fetch('https://cors-anywhere.herokuapp.com/https://www-student.cse.buffalo.edu/CSE442-542/2024-Spring/cse-442ac/backend/searchFilter/?filter=professors')\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Received data from backend:\", data);\n          setProfessors(data.map(({ professors, ...rest }) => ({ name: professors, ...rest })));\n        })\n        .catch(error => console.error('Error fetching search results:', error));\n    }\n  }, [location.state]); \n\n  console.log(\"Search results:\", professors); // Add this line to print search results\n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <ProfessorProfiles professors={professors} />\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,uDAAuD;AACrF,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA,IAAIU,QAAQ,CAACC,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACH,UAAU,EAAE;MAC/C;MACAC,aAAa,CAACC,QAAQ,CAACC,KAAK,CAACH,UAAU,CAACI,GAAG,CAAC,CAAC;QAAEJ,UAAU;QAAE,GAAGK;MAAK,CAAC,MAAM;QAAEC,IAAI,EAAEN,UAAU;QAAE,GAAGK;MAAK,CAAC,CAAC,CAAC,CAAC;IAC5G,CAAC,MAAM;MACL;MACAE,KAAK,CAAC,kJAAkJ,CAAC,CACtJC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,IAAI,CAAC;QAChDV,aAAa,CAACU,IAAI,CAACP,GAAG,CAAC,CAAC;UAAEJ,UAAU;UAAE,GAAGK;QAAK,CAAC,MAAM;UAAEC,IAAI,EAAEN,UAAU;UAAE,GAAGK;QAAK,CAAC,CAAC,CAAC,CAAC;MACvF,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAC3E;EACF,CAAC,EAAE,CAACb,QAAQ,CAACC,KAAK,CAAC,CAAC;EAEpBS,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEb,UAAU,CAAC,CAAC,CAAC;;EAE5C,oBACEH,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTxB,OAAA,CAACJ,iBAAiB;MAACO,UAAU,EAAEA;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACtB,EAAA,CA7BQD,MAAM;EAAA,QAEIH,WAAW;AAAA;AAAA2B,EAAA,GAFrBxB,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}