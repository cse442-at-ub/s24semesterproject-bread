{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/professorPage/professorPage.jsx\";\nimport React from 'react';\nimport './ProfessorCard.css'; // Make sure this CSS file is correctly linked\nimport NavBar from '../navBar/NavBar';\nimport Review from './review'; // Import the Review component\nimport professorInfo from './professorInfo'; // Assuming this is imported\nimport defaultPic from \"../../images/defaultPic.png\"; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfessorCard = () => {\n  const handleSort = () => {\n    // Implement your sorting logic here\n    console.log('Sorting...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"professor-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: professorInfo.profilePicture || defaultPic,\n        alt: \"Professor\",\n        className: \"professor-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: professorInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: professorInfo.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"professor-rating\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [professorInfo.rating, \"/5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSort,\n        className: \"sort-button\",\n        children: \"Sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews\",\n      children: professorInfo.reviews && professorInfo.reviews.map((review, index) => /*#__PURE__*/_jsxDEV(Review, {\n        author: review.author,\n        content: review.content,\n        rating: review.rating,\n        term: review.term // Make sure your review data includes these\n        ,\n        course: review.course // Same here\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = ProfessorCard;\nexport default ProfessorCard;\n\n/*            \n    const [reviews, setReviews] = useState(professorInfo.reviews);\n\n    const sortReviews = (sortBy) => {\n      const sortedReviews = [...reviews].sort((a, b) => {\n        if (sortBy === \"rating\") {\n          return b.rating - a.rating; // For descending order\n        } else if (sortBy === \"author\") {\n          return a.author.localeCompare(b.author); // For alphabetical order\n        }\n        return 0;\n      });\n  \n      setReviews(sortedReviews);\n    };\n<div className='sort-button-container'>\n                <button className='sort-button' onClick={() => sortReviews(\"rating\")}>Sort by Rating</button>\n                <button className='sort-button' onClick={() => sortReviews(\"author\")}>Sort by Author</button> \n            </div> */\nvar _c;\n$RefreshReg$(_c, \"ProfessorCard\");","map":{"version":3,"names":["React","NavBar","Review","professorInfo","defaultPic","jsxDEV","_jsxDEV","ProfessorCard","handleSort","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","profilePicture","alt","name","department","rating","onClick","reviews","map","review","index","author","content","term","course","_c","$RefreshReg$"],"sources":["/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/professorPage/professorPage.jsx"],"sourcesContent":["import React from 'react';\nimport './ProfessorCard.css'; // Make sure this CSS file is correctly linked\nimport NavBar from '../navBar/NavBar';\nimport Review from './review'; // Import the Review component\nimport professorInfo from './professorInfo'; // Assuming this is imported\nimport defaultPic from \"../../images/defaultPic.png\"; // Adjust the path as necessary\n\nconst ProfessorCard = () => {\n    const handleSort = () => {\n        // Implement your sorting logic here\n        console.log('Sorting...');\n    };\n\n    return (\n        <div>\n            <NavBar/>\n            <div className=\"professor-card\">\n                <img src={professorInfo.profilePicture || defaultPic} alt=\"Professor\" className=\"professor-img\" />\n                <div className=\"professor-info\">\n                    <h2>{professorInfo.name}</h2>\n                    <p>{professorInfo.department}</p>\n                </div>\n                <div className=\"professor-rating\">\n                    <span>{professorInfo.rating}/5</span>\n                </div>\n            </div>\n            <div className=\"sort-button-container\">\n                <button onClick={handleSort} className=\"sort-button\">Sort by</button>\n            </div>\n\n            \n            {/* Review components are rendered here, below professor information */}\n            <div className=\"reviews\">\n                {professorInfo.reviews && professorInfo.reviews.map((review, index) => (\n                    <Review \n                        key={index} \n                        author={review.author} \n                        content={review.content} \n                        rating={review.rating}\n                        term={review.term}  // Make sure your review data includes these\n                        course={review.course} // Same here\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ProfessorCard;\n\n\n/*            \n    const [reviews, setReviews] = useState(professorInfo.reviews);\n\n    const sortReviews = (sortBy) => {\n      const sortedReviews = [...reviews].sort((a, b) => {\n        if (sortBy === \"rating\") {\n          return b.rating - a.rating; // For descending order\n        } else if (sortBy === \"author\") {\n          return a.author.localeCompare(b.author); // For alphabetical order\n        }\n        return 0;\n      });\n  \n      setReviews(sortedReviews);\n    };\n<div className='sort-button-container'>\n                <button className='sort-button' onClick={() => sortReviews(\"rating\")}>Sort by Rating</button>\n                <button className='sort-button' onClick={() => sortReviews(\"author\")}>Sort by Author</button> \n            </div> */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}