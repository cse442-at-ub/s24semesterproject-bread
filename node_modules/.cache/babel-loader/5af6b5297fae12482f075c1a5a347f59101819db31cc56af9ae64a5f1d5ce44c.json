{"ast":null,"code":"var _jsxFileName = \"/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/quizPage/QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NavBar from '../navBar/NavBar';\nimport './QuizPage.css'; // Assuming your CSS file is named Quiz.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  // States for tracking quiz answers and results\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState('');\n\n  // Questions array\n  const questions = [{\n    question: \"When starting a new topic, you prefer a professor who:\",\n    options: [\"A. Breaks down complex concepts into understandable parts.\", \"B. Introduces interactive tools and technologies.\", \"C. Begins with a comprehensive lecture on the topic.\", \"D. Encourages group activities to explore the topic.\", \"E. Presents a challenging problem to solve using the topic.\"]\n  }, {\n    question: \"Your ideal study material format is:\",\n    options: [\"A. Personalized notes or study guides.\", \"B. Digital resources and online courses.\", \"C. Textbooks and academic papers.\", \"D. Collaborative study groups and forums.\", \"E. Real-world case studies and examples.\"]\n  }, {\n    question: \"During lectures, you prefer:\",\n    options: [\"A. Frequent check-ins to ensure understanding.\", \"B. The use of multimedia presentations and visuals.\", \"C. Detailed note-taking and traditional lectures.\", \"D. Interactive discussions and peer feedback.\", \"E. Debates and critical analysis tasks.\"]\n  }, {\n    question: \"The type of assignments you find most enriching are:\",\n    options: [\"A. Projects with step-by-step feedback.\", \"B. Creative assignments using new software or methods.\", \"C. Standard essays and problem sets.\", \"D. Group projects with peer evaluations.\", \"E. Independent research projects with minimal guidance.\"]\n  }, {\n    question: \"Feedback on your work should be:\",\n    options: [\"A. Supportive, with constructive suggestions.\", \"B. Innovative, offering creative improvements.\", \"C. Direct, with clear indications of right or wrong.\", \"D. Collaborative, including feedback from peers.\", \"E. Challenging, pushing you to do better.\"]\n  }\n\n  // Add all other questions following the same structure\n  ];\n\n  // Function to handle option selection\n  const handleSelectOption = (questionIndex, option) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: option\n    });\n  };\n\n  // Function to calculate and set the result\n  const calculateResult = () => {\n    const counts = {\n      A: 0,\n      B: 0,\n      C: 0,\n      D: 0,\n      E: 0\n    };\n    Object.values(answers).forEach(answer => counts[answer]++);\n    const maxCount = Math.max(...Object.values(counts));\n    const topCategories = Object.keys(counts).filter(key => counts[key] === maxCount);\n    setResult(`Your best match: ${topCategories.join(' and ')}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: q.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${answers[index] === option.charAt(0) ? 'selected' : ''}`,\n          onClick: () => handleSelectOption(index, option.charAt(0)),\n          children: option\n        }, optionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: calculateResult,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"6EehwRG6HzWnh0P8FZhMrDIe1Yw=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","NavBar","jsxDEV","_jsxDEV","Quiz","_s","answers","setAnswers","result","setResult","questions","question","options","handleSelectOption","questionIndex","option","calculateResult","counts","A","B","C","D","E","Object","values","forEach","answer","maxCount","Math","max","topCategories","keys","filter","key","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","index","optionIndex","charAt","onClick","_c","$RefreshReg$"],"sources":["/Users/ali/Documents/GitHub/s24semesterproject-bread/src/webpages/quizPage/QuizPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport NavBar from '../navBar/NavBar';\nimport './QuizPage.css'; // Assuming your CSS file is named Quiz.css\n\nconst Quiz = () => {\n  // States for tracking quiz answers and results\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState('');\n\n  // Questions array\n  const questions = [\n    {\n        question: \"When starting a new topic, you prefer a professor who:\",\n        options: [\n          \"A. Breaks down complex concepts into understandable parts.\",\n          \"B. Introduces interactive tools and technologies.\",\n          \"C. Begins with a comprehensive lecture on the topic.\",\n          \"D. Encourages group activities to explore the topic.\",\n          \"E. Presents a challenging problem to solve using the topic.\"\n        ]\n      },\n      {\n        question: \"Your ideal study material format is:\",\n        options: [\n          \"A. Personalized notes or study guides.\",\n          \"B. Digital resources and online courses.\",\n          \"C. Textbooks and academic papers.\",\n          \"D. Collaborative study groups and forums.\",\n          \"E. Real-world case studies and examples.\"\n        ]\n      },\n      {\n        question: \"During lectures, you prefer:\",\n        options: [\n          \"A. Frequent check-ins to ensure understanding.\",\n          \"B. The use of multimedia presentations and visuals.\",\n          \"C. Detailed note-taking and traditional lectures.\",\n          \"D. Interactive discussions and peer feedback.\",\n          \"E. Debates and critical analysis tasks.\"\n        ]\n      },\n      {\n        question: \"The type of assignments you find most enriching are:\",\n        options: [\n          \"A. Projects with step-by-step feedback.\",\n          \"B. Creative assignments using new software or methods.\",\n          \"C. Standard essays and problem sets.\",\n          \"D. Group projects with peer evaluations.\",\n          \"E. Independent research projects with minimal guidance.\"\n        ]\n      },\n      {\n        question: \"Feedback on your work should be:\",\n        options: [\n          \"A. Supportive, with constructive suggestions.\",\n          \"B. Innovative, offering creative improvements.\",\n          \"C. Direct, with clear indications of right or wrong.\",\n          \"D. Collaborative, including feedback from peers.\",\n          \"E. Challenging, pushing you to do better.\"\n        ]\n      }\n  \n    // Add all other questions following the same structure\n  ];\n\n   // Function to handle option selection\n   const handleSelectOption = (questionIndex, option) => {\n    setAnswers({ ...answers, [questionIndex]: option });\n  };\n\n  // Function to calculate and set the result\n  const calculateResult = () => {\n    const counts = { A: 0, B: 0, C: 0, D: 0, E: 0 };\n    Object.values(answers).forEach(answer => counts[answer]++);\n    const maxCount = Math.max(...Object.values(counts));\n    const topCategories = Object.keys(counts).filter(key => counts[key] === maxCount);\n    setResult(`Your best match: ${topCategories.join(' and ')}`);\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <NavBar />\n      {questions.map((q, index) => (\n        <div key={index} className=\"question-block\">\n          <div className=\"question\">{q.question}</div>\n          <div className=\"options\">\n            {q.options.map((option, optionIndex) => (\n              <button\n                key={optionIndex}\n                className={`option-button ${answers[index] === option.charAt(0) ? 'selected' : ''}`}\n                onClick={() => handleSelectOption(index, option.charAt(0))}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        </div>\n      ))}\n      <button className=\"submit-btn\" onClick={calculateResult}>Submit</button>\n      {result && <div className=\"result\">{result}</div>}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}